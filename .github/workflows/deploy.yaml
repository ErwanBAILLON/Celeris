name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment: CI/CD
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend image
        run: |
          docker build -t celeris-backend:latest -f backend/Dockerfile backend
          docker tag celeris-backend:latest "${{ secrets.DOCKER_USERNAME }}/celeristest-backend:latest"
          docker push "${{ secrets.DOCKER_USERNAME }}/celeristest-backend:latest"

      - name: Build and push frontend image
        run: |
          docker build -t celeris-frontend:latest -f frontend/Dockerfile frontend
          docker tag celeris-frontend:latest "${{ secrets.DOCKER_USERNAME }}/celeristest-frontend:latest"
          docker push "${{ secrets.DOCKER_USERNAME }}/celeristest-frontend:latest"

      - name: Build and push database image
        run: |
          docker build -t celeris-database:latest -f database/Dockerfile database
          docker tag celeris-database:latest "${{ secrets.DOCKER_USERNAME }}/celeristest-database:latest"
          docker push "${{ secrets.DOCKER_USERNAME }}/celeristest-database:latest"

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest
    environment: CI/CD
    steps:
      - name: Deploy via SSH
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no -p $SSH_PORT $SSH_USER@$SSH_HOST << 'EOF'
            cd Celeris
            git pull origin main  
            docker compose -f docker-compose.yml --env-file .env build
            docker compose -f docker-compose.yml --env-file .env down
            docker compose -f docker-compose.yml --env-file .env up -d
          EOF
